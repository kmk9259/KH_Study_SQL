DROP TABLE PRODUCT_STOCK;
CREATE TABLE PRODUCT_STOCK (
  PRODUCT_ID  VARCHAR2(30) PRIMARY KEY,
  P_NAME  VARCHAR2(30)  NOT NULL,
  PRICE NUMBER(10)  NOT NULL,
  DESCRIPTION VARCHAR2(50),
  STOCK NUMBER DEFAULT 0 
);  
CREATE TABLE PRODUCT_IO
(
    IO_NUM NUMBER PRIMARY KEY,
    PRODUCT_ID VARCHAR2(30),
    IO_DATE DATE DEFAULT SYSDATE NOT NULL,
    AMOUNT NUMBER NOT NULL,
    STATUS VARCHAR2(10) CHECK(STATUS IN('입고', '출고')),
    FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT_STOCK(PRODUCT_ID)

);
--시퀀스
CREATE SEQUENCE SEQ_IO_NUM;

--트리거
CREATE OR REPLACE TRIGGER PRODUCT_TRG AFTER
    INSERT ON PRODUCT_IO
    FOR EACH ROW
BEGIN
    IF :NEW.STATUS = '입고'
    THEN
        UPDATE PRODUCT_STOCK
        SET STOCK = STOCK + :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    END IF;
    
    IF :NEW.STATUS = '출고'
    THEN
        UPDATE PRODUCT_STOCK
        SET STOCK = STOCK - :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    END IF;
END;
/
--상품정보 insert
INSERT INTO PRODUCT_STOCK VALUES ('nb_ss7', '삼성노트북', 1570000, '시리즈 7', DEFAULT);
INSERT INTO PRODUCT_STOCK VALUES ('nb_macbook_air', '맥북에어', 1200000, 'xcode 4', DEFAULT);
INSERT INTO PRODUCT_STOCK VALUES ('pc_ibm', 'ibmPC', 750000, 'windows 8', DEFAULT);
COMMIT;

INSERT INTO PRODUCT_IO VALUES (SEQ_IO_NUM.NEXTVAL,'nb_ss7', '19/07/01',30,'입고');
INSERT INTO PRODUCT_IO VALUES (SEQ_IO_NUM.NEXTVAL,'nb_ss7', '19/07/02',3,'출고');
INSERT INTO PRODUCT_IO VALUES (SEQ_IO_NUM.NEXTVAL,'pc_ibm', '19/07/02',10,'입고');


SELECT 
    A.IO_NUM 입출고번호,
    A.PRODUCT_ID 상품ID,
    B.P_NAME 상품명,
    TO_CHAR(A.IO_DATE,'RRRR-MM-DD') 입출고일,
    A.AMOUNT 입출고수량,
    A.STATUS 입출고상태
FROM PRODUCT_IO A
JOIN PRODUCT_STOCK B ON A.PRODUCT_ID = B.PRODUCT_ID
WHERE A.STATUS='입고';
SAVEPOINT A;

